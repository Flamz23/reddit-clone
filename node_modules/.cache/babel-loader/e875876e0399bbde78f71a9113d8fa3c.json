{"remainingRequest":"C:\\Users\\damip\\Documents\\javascript\\REDDITCLONE\\reddit-clone\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\damip\\Documents\\javascript\\REDDITCLONE\\reddit-clone\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\damip\\Documents\\javascript\\REDDITCLONE\\reddit-clone\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\damip\\Documents\\javascript\\REDDITCLONE\\reddit-clone\\src\\views\\Home.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\damip\\Documents\\javascript\\REDDITCLONE\\reddit-clone\\src\\views\\Home.vue","mtime":1636797163790},{"path":"C:\\Users\\damip\\Documents\\javascript\\REDDITCLONE\\reddit-clone\\babel.config.js","mtime":1635784453823},{"path":"C:\\Users\\damip\\Documents\\javascript\\REDDITCLONE\\reddit-clone\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\damip\\Documents\\javascript\\REDDITCLONE\\reddit-clone\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\damip\\Documents\\javascript\\REDDITCLONE\\reddit-clone\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\damip\\Documents\\javascript\\REDDITCLONE\\reddit-clone\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICJDOi9Vc2Vycy9kYW1pcC9Eb2N1bWVudHMvamF2YXNjcmlwdC9SRURESVRDTE9ORS9yZWRkaXQtY2xvbmUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5IjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1VzZXJzL2RhbWlwL0RvY3VtZW50cy9qYXZhc2NyaXB0L1JFRERJVENMT05FL3JlZGRpdC1jbG9uZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKaW1wb3J0IHBvc3RDYXJkIGZyb20gIi4uL2NvbXBvbmVudHMvcG9zdENhcmQudnVlIjsKaW1wb3J0IG9ic2VydmVyIGZyb20gIi4uL2NvbXBvbmVudHMvT2JzZXJ2ZXJDb21wb25lbnQudnVlIjsKaW1wb3J0IGxvYWRlciBmcm9tICIuLi9zY3JpcHRzL3Bvc3RMb2FkZXIuanMiOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgcG9zdENhcmQ6IHBvc3RDYXJkLAogICAgb2JzZXJ2ZXI6IG9ic2VydmVyCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcG9zdHM6IFtdCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgaW50ZXJzZWN0ZWQ6IGZ1bmN0aW9uIGludGVyc2VjdGVkKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgbmV3UG9zdHM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gbG9hZGVyLmdldEhvdCgpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBuZXdQb3N0cyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBfdGhpcy5wb3N0cyA9IFtdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkoX3RoaXMucG9zdHMpLCBfdG9Db25zdW1hYmxlQXJyYXkobmV3UG9zdHMpKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGdldFN1YnJlZGRpdEljb246IGZ1bmN0aW9uIGdldFN1YnJlZGRpdEljb24oKSB7CiAgICAgIHZhciBqc29uRGF0YSA9IGF4aW9zLmdldCgiaHR0cHM6Ly93d3cucmVkZGl0LmNvbS8iLmNvbmNhdCh0aGlzLnBvc3Quc3VicmVkZGl0X25hbWVfcHJlZml4ZWQsICIvYWJvdXQuanNvbiIpKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICByZXR1cm4gcmVzOwogICAgICB9KTsKICAgICAganNvbkRhdGEgPSBKU09OLnBhcnNlKGpzb25EYXRhKTsKICAgICAgY29uc29sZS5sb2coanNvbkRhdGEpOwogICAgICByZXR1cm4gMTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["C:\\Users\\damip\\Documents\\javascript\\REDDITCLONE\\reddit-clone\\src\\views\\Home.vue"],"names":[],"mappings":";;;;AAeA,OAAO,KAAP,MAAkB,OAAlB;AACA,OAAO,QAAP,MAAqB,4BAArB;AACA,OAAO,QAAP,MAAqB,qCAArB;AACA,OAAO,MAAP,MAAmB,0BAAnB;AAEA,eAAe;AACb,EAAA,UAAU,EAAE;AACV,IAAA,QAAQ,EAAR,QADU;AAEV,IAAA,QAAQ,EAAR;AAFU,GADC;AAKb,EAAA,IALa,kBAKN;AACL,WAAO;AACL,MAAA,KAAK,EAAE;AADF,KAAP;AAGD,GATY;AAUb,EAAA,OAAO,EAAE;AACD,IAAA,WADC,yBACa;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAGK,MAAM,CAAC,MAAP,EAHL;;AAAA;AAGZ,gBAAA,QAHY;AAIlB,gBAAA,KAAI,CAAC,KAAL,gCAAiB,KAAI,CAAC,KAAtB,sBAAgC,QAAhC;;AAJkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKnB;AANM,GAVI;AAkBb,EAAA,QAAQ,EAAE;AACR,IAAA,gBADQ,8BACW;AACjB,UAAI,QAAO,GAAI,KAAI,CAChB,GADY,kCAEe,KAAK,IAAL,CAAU,uBAFzB,kBAIZ,IAJY,CAIP,UAAC,GAAD,EAAS;AACb,eAAO,GAAP;AACD,OANY,CAAf;AAOA,MAAA,QAAO,GAAI,IAAI,CAAC,KAAL,CAAW,QAAX,CAAX;AACA,MAAA,OAAO,CAAC,GAAR,CAAY,QAAZ;AACA,aAAO,CAAP;AACD;AAZO;AAlBG,CAAf","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"w-full h-screen pt-14 pb-16 overflow-y-scroll\">\r\n      <post-card\r\n        v-for=\"(post, index) in posts\"\r\n        :post=\"post\"\r\n        :key=\"index\"\r\n      ></post-card>\r\n      <observer @intersect=\"intersected\" />\r\n      <p>{{ getSubredditIcon }}</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport postCard from \"../components/postCard.vue\";\r\nimport observer from \"../components/ObserverComponent.vue\";\r\nimport loader from \"../scripts/postLoader.js\";\r\n\r\nexport default {\r\n  components: {\r\n    postCard,\r\n    observer,\r\n  },\r\n  data() {\r\n    return {\r\n      posts: [],\r\n    };\r\n  },\r\n  methods: {\r\n    async intersected() {\r\n      //obsevrvable component emits intersect and calls intersection on visible\r\n      // append more posts on intersect event (https://vueschool.io/articles/vuejs-tutorials/build-an-infinite-scroll-component-using-intersection-observer-api/)\r\n      const newPosts = await loader.getHot();\r\n      this.posts = [...this.posts, ...newPosts];\r\n    },\r\n  },\r\n  computed: {\r\n    getSubredditIcon() {\r\n      let jsonData = axios\r\n        .get(\r\n          `https://www.reddit.com/${this.post.subreddit_name_prefixed}/about.json`\r\n        )\r\n        .then((res) => {\r\n          return res;\r\n        });\r\n      jsonData = JSON.parse(jsonData);\r\n      console.log(jsonData);\r\n      return 1;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n"],"sourceRoot":""}]}